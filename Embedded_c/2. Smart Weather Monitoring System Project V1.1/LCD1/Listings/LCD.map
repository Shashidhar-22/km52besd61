Component: ARM Compiler 5.06 update 1 (build 61) Tool: armlink [4d35a8]

==============================================================================

Section Cross References

    lcd.o(i.KM_LCD_Init) refers to systick.o(i.Delay_mSec) for Delay_mSec
    lcd.o(i.KM_LCD_Init) refers to lcd.o(i.KM_LCD_Write_Cmd) for KM_LCD_Write_Cmd
    lcd.o(i.KM_LCD_Write_Cmd) refers to lcd.o(i.write_high_nibble) for write_high_nibble
    lcd.o(i.KM_LCD_Write_Cmd) refers to lcd.o(i.write_low_nibble) for write_low_nibble
    lcd.o(i.KM_LCD_Write_Data) refers to lcd.o(i.write_high_nibble) for write_high_nibble
    lcd.o(i.KM_LCD_Write_Data) refers to lcd.o(i.write_low_nibble) for write_low_nibble
    lcd.o(i.KM_LCD_Write_Lower_Str) refers to lcd.o(i.KM_LCD_Write_Cmd) for KM_LCD_Write_Cmd
    lcd.o(i.KM_LCD_Write_Lower_Str) refers to lcd.o(i.KM_LCD_Write_Data) for KM_LCD_Write_Data
    lcd.o(i.KM_LCD_Write_Str) refers to lcd.o(i.KM_LCD_Write_Data) for KM_LCD_Write_Data
    lcd.o(i.KM_LCD_Write_Str) refers to lcd.o(i.KM_LCD_Write_Cmd) for KM_LCD_Write_Cmd
    lcd.o(i.KM_LCD_Write_Upper_Str) refers to lcd.o(i.KM_LCD_Write_Cmd) for KM_LCD_Write_Cmd
    lcd.o(i.KM_LCD_Write_Upper_Str) refers to lcd.o(i.KM_LCD_Write_Data) for KM_LCD_Write_Data
    lcd.o(i.write_high_nibble) refers to lcd.o(i.Delay_ms) for Delay_ms
    lcd.o(i.write_low_nibble) refers to lcd.o(i.Delay_ms) for Delay_ms
    startup_stm32f401xc.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f401xc.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f401xc.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f401xc.o(RESET) refers to startup_stm32f401xc.o(STACK) for __initial_sp
    startup_stm32f401xc.o(RESET) refers to startup_stm32f401xc.o(.text) for Reset_Handler
    startup_stm32f401xc.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f401xc.o(.text) refers to system_stm32f4xx.o(i.SystemInit) for SystemInit
    startup_stm32f401xc.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f401xc.o(.text) refers to startup_stm32f401xc.o(HEAP) for Heap_Mem
    startup_stm32f401xc.o(.text) refers to startup_stm32f401xc.o(STACK) for Stack_Mem
    system_stm32f4xx.o(i.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    system_stm32f4xx.o(i.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.constdata) for AHBPrescTable
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f401xc.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to _get_argv_nomalloc.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing lcd.o(i.Delay_ms), (20 bytes).
    Removing lcd.o(i.KM_LCD_Init), (108 bytes).
    Removing lcd.o(i.KM_LCD_Write_Cmd), (36 bytes).
    Removing lcd.o(i.KM_LCD_Write_Data), (36 bytes).
    Removing lcd.o(i.KM_LCD_Write_Lower_Str), (32 bytes).
    Removing lcd.o(i.KM_LCD_Write_Str), (34 bytes).
    Removing lcd.o(i.KM_LCD_Write_Upper_Str), (32 bytes).
    Removing lcd.o(i.write_high_nibble), (60 bytes).
    Removing lcd.o(i.write_low_nibble), (64 bytes).
    Removing system_stm32f4xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f4xx.o(.revsh_text), (4 bytes).
    Removing system_stm32f4xx.o(.rrx_text), (6 bytes).
    Removing system_stm32f4xx.o(i.SystemCoreClockUpdate), (192 bytes).
    Removing system_stm32f4xx.o(.constdata), (24 bytes).
    Removing system_stm32f4xx.o(.data), (4 bytes).
    Removing systick.o(i.Delay_Sec), (48 bytes).
    Removing systick.o(i.Delay_mSec), (38 bytes).
    Removing systick.o(i.Delay_uSec), (34 bytes).
    Removing systick.o(i.KM_Delay_ms), (68 bytes).
    Removing systick.o(i.STK_Init), (34 bytes).

20 unused section(s) (total 878 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_1 (Base: 0x08000000, Size: 0x000004f0, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Base: 0x08000000, Size: 0x000004f0, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x00000194   Data   RO           65    RESET               startup_stm32f401xc.o
    0x08000194   0x00000008   Code   RO          173  * !!!main             c_w.l(__main.o)
    0x0800019c   0x00000002   Code   RO          200    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800019e   0x00000004   Code   RO          206    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          209    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          212    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          214    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          216    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          219    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          221    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          223    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          225    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          227    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          229    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          231    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          233    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          235    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          237    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x080001a2   0x00000000   Code   RO          239    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x080001a2   0x00000008   Code   RO          241    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x080001aa   0x00000000   Code   RO          245    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x080001aa   0x00000000   Code   RO          247    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x080001aa   0x00000000   Code   RO          249    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x080001aa   0x00000002   Code   RO          250    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x080001ac   0x00000002   Code   RO          270    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x080001ae   0x00000000   Code   RO          283    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x080001ae   0x00000000   Code   RO          285    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x080001ae   0x00000000   Code   RO          288    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x080001ae   0x00000000   Code   RO          291    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x080001ae   0x00000000   Code   RO          293    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x080001ae   0x00000000   Code   RO          296    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x080001ae   0x00000002   Code   RO          297    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x080001b0   0x00000000   Code   RO          175    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x080001b0   0x00000000   Code   RO          177    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x080001b0   0x00000006   Code   RO          189    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x080001b6   0x00000000   Code   RO          179    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x080001b6   0x00000004   Code   RO          180    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001ba   0x00000000   Code   RO          182    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001ba   0x00000008   Code   RO          183    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001c2   0x00000002   Code   RO          204    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001c4   0x00000000   Code   RO          252    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001c4   0x00000004   Code   RO          253    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001c8   0x00000006   Code   RO          254    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001ce   0x00000002   PAD
    0x080001d0   0x00000004   Code   RO          258    .emb_text           c_w.l(argv_veneer.o)
    0x080001d4   0x00000040   Code   RO           66  * .text               startup_stm32f401xc.o
    0x08000214   0x00000006   Code   RO          171    .text               c_w.l(heapauxi.o)
    0x0800021a   0x0000004a   Code   RO          191    .text               c_w.l(sys_stackheap_outer.o)
    0x08000264   0x00000012   Code   RO          193    .text               c_w.l(exit.o)
    0x08000276   0x00000002   PAD
    0x08000278   0x00000008   Code   RO          201    .text               c_w.l(libspace.o)
    0x08000280   0x0000000c   Code   RO          262    .text               c_w.l(sys_exit.o)
    0x0800028c   0x0000012e   Code   RO          266    .text               c_w.l(_get_argv_nomalloc.o)
    0x080003ba   0x00000018   Code   RO          271    .text               c_w.l(sys_command.o)
    0x080003d2   0x00000002   Code   RO          273    .text               c_w.l(use_no_semi.o)
    0x080003d4   0x00000000   Code   RO          275    .text               c_w.l(indicate_semi.o)
    0x080003d4   0x00000004   Code   RO          276    .text               c_w.l(hrguard.o)
    0x080003d8   0x0000000e   Code   RO          278    .text               c_w.l(defsig_rtmem_outer.o)
    0x080003e6   0x0000000a   Code   RO          300    .text               c_w.l(defsig_exit.o)
    0x080003f0   0x00000050   Code   RO          302    .text               c_w.l(defsig_rtmem_inner.o)
    0x08000440   0x00000032   Code   RO          306    .text               c_w.l(defsig_general.o)
    0x08000472   0x0000000e   Code   RO          308    .text               c_w.l(sys_wrch.o)
    0x08000480   0x00000064   Code   RO           75    i.SystemInit        system_stm32f4xx.o
    0x080004e4   0x0000000a   Code   RO          260    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x080004ee   0x00000002   PAD
    0x080004f0   0x00000000   Data   RO          328    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Base: 0x20000000, Size: 0x00000000, Max: 0xffffffff, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region ER_ZI (Base: 0x20000000, Size: 0x00000660, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000060   Zero   RW          202    .bss                c_w.l(libspace.o)
    0x20000060   0x00000200   Zero   RW           64    HEAP                startup_stm32f401xc.o
    0x20000260   0x00000400   Zero   RW           63    STACK               startup_stm32f401xc.o

